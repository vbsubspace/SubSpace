{
  "name": "Hasura sendMessage -> n8n -> OpenRouter",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "send-message",
        "responseMode": "responseNode"
      },
      "id": "Webhook",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [200, 300]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "boolean": [],
          "number": [],
          "string": [
            { "name": "auth", "value": "={{$json[\"headers\"][\"authorization\"]}}" },
            { "name": "chat_id", "value": "={{$json.body.chat_id}}" },
            { "name": "content", "value": "={{$json.body.content}}" }
          ]
        }
      },
      "id": "Extract Context",
      "name": "Extract Context",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [420, 300]
    },
    {
      "parameters": {
        "authentication": "none",
        "requestMethod": "POST",
        "url": "https://backend-REPLACE.nhost.run/v1/graphql",
        "jsonParameters": true,
        "options": { "response": { "responseFormat": "json" } },
        "headerParametersJson": "{\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"={{$json.auth}}\"\n}",
        "bodyParametersJson": "={{ ({ query: \"query ($id: uuid!) { chats_by_pk(id: $id) { id } }\", variables: { id: $json.chat_id } }) }}"
      },
      "id": "Check Chat Ownership",
      "name": "Check Chat Ownership",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 5,
      "position": [660, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "type": "expression",
            "value1": "={{ !!$json.data && !!$json.data.chats_by_pk }}"
          }
        }
      },
      "id": "If Owned",
      "name": "If Owned",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [880, 300]
    },
    {
      "parameters": {
        "mode": "passThrough",
        "mergeByFields": []
      },
      "id": "Merge Context",
      "name": "Merge Context",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [1100, 300]
    },
    {
      "parameters": {
        "authentication": "none",
        "requestMethod": "POST",
        "url": "https://backend-REPLACE.nhost.run/v1/graphql",
        "jsonParameters": true,
        "options": { "response": { "responseFormat": "json" } },
        "headerParametersJson": "{\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"={{$json.auth}}\"\n}",
        "bodyParametersJson": "={{ ({ query: \"mutation ($chat_id: uuid!, $content: String!) { insert_messages_one(object: { chat_id: $chat_id, role: \\\"user\\\", content: $content }) { id } }\", variables: { chat_id: $json.chat_id, content: $json.content } }) }}"
      },
      "id": "Insert User Message",
      "name": "Insert User Message",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 5,
      "position": [1320, 300]
    },
    {
      "parameters": {
        "resource": "chat",
        "operation": "create",
        "model": "meta-llama/llama-3.1-8b-instruct:free",
        "messages": {
          "messageUi": {
            "message": [
              { "text": "You are a helpful assistant.", "type": "system" },
              { "text": "={{$json.content}}", "type": "user" }
            ]
          }
        },
        "additionalFields": {
          "additionalHeadersUi": {
            "additionalHeader": [
              { "name": "HTTP-Referer", "value": "https://your-netlify-site.netlify.app" },
              { "name": "X-Title", "value": "Nhost Chatbot" }
            ]
          }
        }
      },
      "id": "OpenRouter Chat",
      "name": "OpenRouter Chat",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 5,
      "position": [1540, 300],
      "credentials": {
        "openAiApi": {
          "id": "REPLACE_WITH_CREDS_ID",
          "name": "OpenRouter"
        }
      }
    },
    {
      "parameters": {
        "authentication": "none",
        "requestMethod": "POST",
        "url": "https://backend-REPLACE.nhost.run/v1/graphql",
        "jsonParameters": true,
        "options": { "response": { "responseFormat": "json" } },
        "headerParametersJson": "{\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"={{$json.auth}}\"\n}",
        "bodyParametersJson": "={{ ({ query: \"mutation ($chat_id: uuid!, $content: String!) { insert_messages_one(object: { chat_id: $chat_id, role: \\\"assistant\\\", content: $content }) { id content } }\", variables: { chat_id: $json.chat_id, content: $json.choices[0].message.content } }) }}"
      },
      "id": "Insert Assistant Message",
      "name": "Insert Assistant Message",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 5,
      "position": [1760, 300]
    },
    {
      "parameters": {
        "responseCode": 200,
        "responseData": "json",
        "responseBody": "{\n  \"message_id\": \"={{$json.data.insert_messages_one.id}}\",\n  \"reply\": \"={{$json.data.insert_messages_one.content}}\"\n}"
      },
      "id": "Respond 200",
      "name": "Respond 200",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1980, 300]
    },
    {
      "parameters": {
        "responseCode": 403,
        "responseData": "json",
        "responseBody": "{\n  \"error\": \"Chat not found or not owned by user\"\n}"
      },
      "id": "Respond 403",
      "name": "Respond 403",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1100, 520]
    }
  ],
  "connections": {
    "Webhook": { "main": [[{ "node": "Extract Context", "type": "main", "index": 0 }]] },
    "Extract Context": { "main": [[{ "node": "Check Chat Ownership", "type": "main", "index": 0 }], [{ "node": "Merge Context", "type": "main", "index": 1 }]] },
    "Check Chat Ownership": { "main": [[{ "node": "If Owned", "type": "main", "index": 0 }]] },
    "If Owned": { "main": [[{ "node": "Merge Context", "type": "main", "index": 0 }], [{ "node": "Respond 403", "type": "main", "index": 0 }]] },
    "Merge Context": { "main": [[{ "node": "Insert User Message", "type": "main", "index": 0 }]] },
    "Insert User Message": { "main": [[{ "node": "OpenRouter Chat", "type": "main", "index": 0 }]] },
    "OpenRouter Chat": { "main": [[{ "node": "Insert Assistant Message", "type": "main", "index": 0 }]] },
    "Insert Assistant Message": { "main": [[{ "node": "Respond 200", "type": "main", "index": 0 }]] }
  },
  "pinData": {},
  "meta": { "workflowId": "nhost-send-message" }
}